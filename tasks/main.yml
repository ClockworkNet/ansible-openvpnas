---

- name: Create /var/ansible dir
  file: path=/var/ansible state=directory recurse=yes

- name: Create my.cnf file for sql
  template:
    src: templates/my.cnf.j2
    dest: /etc/.my.cnf
  notify: restart openvpnas

- name: Install mysql depends
  apt:
    name: "{{item}}"
  with_items:
    - mysql-client
    - libmysqlclient-dev

- name: see if openvpn-AS is installed
  shell: "dpkg-query -l | grep openvpn-as | grep {{openvpn_as_version}}"
  failed_when: false
  ignore_errors: true
  register: dpkg_openvpn_as
  changed_when: false

- name: install openvpn-AS
  apt:
    deb: "{{openvpn_installer_url}}"
  when: "'ii' not in dpkg_openvpn_as.stdout"

- name: change openvpn user password
  user:
    name: openvpn
    password: "{{openvpn_user_password}}"
  failed_when: false
  ignore_errors: true

- name: change openvpn user password
  user:
    name: openvpn_as
    password: "{{openvpn_user_password}}"
  failed_when: false
  ignore_errors: true

- name: modify as.conf
  template:
    src: templates/as.conf.j2
    dest: /usr/local/openvpn_as/etc/as.conf
  notify: restart openvpnas

- name: Create openvpn nginx file
  template:
    src: templates/openvpn-nginx.conf.j2
    dest: /var/ansible/nginx.conf
  notify: restart nginx container

- name: create openvpn nginx
  docker_container:
    name: web
    image: 'nginx:latest'
    state: started
    restart_policy: always
    ports:
      - '80:80'
    volumes:
      - /var/ansible/nginx.conf:/etc/nginx/nginx.conf:ro

- name: Create /root/bin dir
  file: path=/root/bin state=directory recurse=yes

- name: Run ldap scripts
  block:
    - name: Create openvpn ldap user file
      template:
        src: templates/openvpn-ldap.py.j2
        dest: /root/bin/openvpn-ldap.py
        mode: 0700
    - name: Run ldap user populate every 5 minutes
      cron:
        name: "check ldap"
        minute: "*/5"
        job: /root/bin/openvpn-ldap.py
  when: openvpn_ldap|bool == true
